==============================

# v1 - First version that I'll share with the world (Svelte Discort, Twitter, etc)

[x] Generate "special" tiles (candy, x and y bombs)
[] Make it a PWA. Add service worker, cache assets, test that it can be installed and played offline.
[] Figure out potential matches to make sure there's at least one in the initial board state
[] Figure out potential matches and make sure I handle the scenario where there are no more possible moves (probably should be game over)
[] Better gameplay and objective
[] Prevent flash of unstyled/invisible content as much as possible
[] Add png tilesheet as a webp fallback for Safari

## Special tiles
[] Resolve x and y bombs (with scoring)
[] Resolve color candy matches (with scoring)
[] Animate spawn of special tiles
[] Animate clearing the board thanks to special tiles

## Start screen
[] Logo
[] Big play Button
[] Credits

## Scoring
[] Animate adding the score to the total
[] Show score over dissapearing match
[] Score font size should decrease the larger it gets

## Sound
[] Background music
[] Better and more sound effects
[] Settings (to toggle music and sound on and off, maybe volume too)

## Nice to haves
[] Animate inital board state
[] Stagger animation of dropping tiles so that they fall one at a time
[] Better "destroy" animation for the tiles
[] Generate bombs
[x] More noticeable "selected" effect for tiles (maybe add target square around it)
[] Support gaps in the grid. See example: https://www.raywenderlich.com/55-how-to-make-a-game-like-candy-crush-with-spritekit-and-swift-part-1
[] Use potential matches to provide hints and also an AI that plays by itself. Use bounce animation for hints
[] Add tile separators (that's what the .cell elements were originally for)

==============================

# v2

[] Evaluate performance: don't want to have laggy animations, so check if I need to use a web worker

## Bugs
[] Fix double tap needed to reset on mobile after swipping (Chrome and Safari)

==============================

# Reading Material

[] https://www.gamasutra.com/blogs/JonathanBailey/20150227/237544/Match_Game_Mechanics_An_exhaustive_survey.php

==============================
==============================
==============================

# TODO

[x] Keep Board state and Svelte component state in sync (bind them somehow)
[x] Initial board state should contain no matches
[x] Should only allow swapping adjacent tiles
[x] Should only allow swapping tiles that will generate a match
[x] Should resolve all matches after a swap
[x] All matched tiles should dissapear
[x] Tiles should drop to fill the empty spaces
[x] Board should be filled with new tiles, and the board should be resolved
[x] Repeat until there are no matches
[x] Better unique ID (probably keep track of the last ID when generating a new one)

==============================

# v0 - First version that I'll let someone else play (Patri, Seba, Diego, etc)

[x] Add UI for Scoring and Moves
[x] Add Button to Reset the Game
[x] Implement EOG. If you run out of moves, show game over with current score and save the best score in LS. Like https://koenig-media.raywenderlich.com/uploads/2017/01/GameOver-322x320.jpg
[x] Add drag and drop / swipping support for mobile
[x] Responsiveness - Needs to look good on every device (down to iPhone SE)
[x] Sound effects. Ex: https://gameartpartners.com/downloads/interface-musical-sounds/
[x] Support swipping on desktop
[x] Calculate board-size based on initial screen size.
[x] UI elements should also resize on really small screens.
[x] Lock to portrait mode.

## Scoring
[x] Figure out actual scoring. Chains should have a multiplier, matches in both row and column should also count for more.
[x] The score should increment exponentially, i.e. 3 = 100 pts, 4 = 150 pts, 5 = 250 pts, etc.
