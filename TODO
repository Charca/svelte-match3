[x] Keep Board state and Svelte component state in sync (bind them somehow)
[x] Initial board state should contain no matches
[x] Should only allow swapping adjacent tiles
[x] Should only allow swapping tiles that will generate a match
[x] Should resolve all matches after a swap
[x] All matched tiles should dissapear
[x] Tiles should drop to fill the empty spaces
[x] Board should be filled with new tiles, and the board should be resolved
[x] Repeat until there are no matches
[x] Better unique ID (probably keep track of the last ID when generating a new one)
[] Make sure I handle the scenario where there are no more possible moves (probably should be game over)
[] Should block the UI if the board is resolving
[] Start new Game UI
[] Figure out potential matches to provide hints and also an AI that plays by itself. Use bounce animation for hints
[] Replace bounce animation on selected with something more subtle
[] Animate inital board state
[] Stagger animation of dropping tiles so that they fall one at a time

## Scoring
[] Figure out actual scoring. Chains should have a multiplier, matches in both row and column should also count for more.
[] The score should increment exponentially, i.e. 3 = 100 pts, 4 = 150 pts, 5 = 250 pts, etc.
[] Show score over dissapearing match.
[] Animate adding the score to the total

## Advanced features
[] Generate and resolve "special" tiles (bombs, clear row/col, etc)
[] Add drag and drop / swipping support
[] Responsiveness
[] Sound effects. Ex: https://gameartpartners.com/downloads/interface-musical-sounds/
[] Pre-load all assets. Images, fonts, sounds, etc.
[] Support gaps in the grid. See example: https://www.raywenderlich.com/55-how-to-make-a-game-like-candy-crush-with-spritekit-and-swift-part-1

## For later
[] Evaluate performance: don't want to have laggy animations, so check if I need to use a web worker
